<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Librarian</title>
    <link rel="stylesheet"href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet"href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        body {
            background: url('library-bg.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }

        .sidebar {
            background-color: white;
            min-height: 100vh;
            padding: 20px;
            border-radius: 15px;
        }

        .sidebar img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
        }
        .sidebar .nav-link {
            color: black;
            font-size: 18px;
            padding: 10px 15px;
            display: flex;
            align-items: center;
            gap: 10px;
            text-decoration: none;
        }

        .sidebar .nav-link:hover {
            background-color: green;
            color: white;
            border-radius: 8px;
        }

       

        .sidebar .logo-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        .nav-link {
            color: rgb(19, 19, 19);
            font-size: 18px;
            padding: 10px 15px;
            text-align: left;
        }

        .nav-link:hover {
            background-color: rgba(255, 255, 255, 0.2);
        }

        .content-container {
            background: rgba(161, 247, 122, 0.9);
            padding: 20px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .tab-content {
            padding: 15px;
        }

        .top-bar {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            background: white;
            border-radius: 10px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar">
                <div class="logo-container">
                    <img src="../images/sjcet.png" alt="SJCET Logo"> 
                    <h4>SJUCET Library</h4>
                </div>
                <ul class="nav flex-column">
                    <li class="nav-item"><a class="nav-link"href="/librarian/librarian_home"><i class="fas fa-home"></i> Home</a></li>
                    <li class="nav-item"><a class="nav-link active"href="/librarian/librarian_category"><i class="fas fa-book"></i> Manage Catalog</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/managerequestlibrarian"><i class="fas fa-tasks"></i> Manage Requests</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/manageinventorylibrarian"><i class="fas fa-boxes"></i> Manage Inventory</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/massageandfeedback"><i class="fas fa-comments"></i> Messages & Feedback</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/generatereport"><i class="fas fa-chart-bar"></i> Generate Reports</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/Itsupport"><i class="fas fa-tools"></i> IT Support</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/manageusers"><i class="fas fa-users"></i> Manage Users</a></li>
                    <li class="nav-item"><a class="nav-link"href="/librarian/managefines"><i class="fas fa-money-bill-wave"></i> Manage Fines</a></li>
                </ul>
            </nav>
     <!-- Main Content -->
     <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            
       <!-- Top Bar -->
       <div class="top-bar d-flex justify-content-between align-items-center">
        <input type="text" class="form-control w-25" placeholder="Search here">
        <div class="d-flex align-items-center">
            <!-- Notification Dropdown -->
            <div class="dropdown me-3">
                <button class="btn btn-light dropdown-toggle" type="button" id="notificationDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-bell"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="notificationDropdown">
                    <li><a class="dropdown-item" href="/librarian/requestnotification">New book added</a></li>
                    <li><a class="dropdown-item" href="/librarian/requestnotification">Request pending approval</a></li>
                    <li><a class="dropdown-item" href="/librarian/systemnotification">System maintenance scheduled</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item text-center" href="/librarian/viewallnotification">View all</a></li>
                </ul>
            </div>

            <!-- User Dropdown -->
            <div class="dropdown">
                <button class="btn btn-light dropdown-toggle" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fas fa-user"></i>
                </button>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                    <li><a class="dropdown-item" href="/librarian/librarian_account">Librarian Account</a></li>
                    <li><a class="dropdown-item" href="/librarian/admin_account">Admin Account</a></li>
                    <li><hr class="dropdown-divider"></li>
                    <li><a class="dropdown-item text-danger" href="/librarian/librarian_interface">Logout</a></li>
                </ul>
            </div>
        </div>
    </div>
                <div class="content-container">
                    <h2 class="text-center mb-4">Librarian Dashboard-manage Books</h2>
                    
                    <!-- View & Add Sections -->
                    <ul class="nav nav-tabs" id="libraryTabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="/librarian/#viewBooks">View Books</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="/librarian/#addBooks">Add Books</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="/librarian/#removeBooks">Remove Books</a>
                        </li>
                    </ul>

                    <div class="tab-content mt-3">
                        <!-- View Section -->
                        <div class="tab-pane fade show active" id="viewBooks">
                            <ul class="nav nav-pills mb-3" id="viewTabs">
                                <li class="nav-item">
                                    <a class="nav-link active" data-bs-toggle="pill" href="/librarian/#availableBooks">Available Books</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="pill" href="/librarian/#deletedBooks">Deleted Books</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="pill" href="/librarian/#borrowedBooks">Borrowed Books</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="pill" href="/librarian/#departments">Departments</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="pill" href="/librarian/#newBooks">New Books</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-bs-toggle="pill" href="/librarian/#updatedBooks">Recently Updated Books</a>
                                </li>
                            </ul>

                            <div class="tab-content">
                                    <div class="tab-pane fade show active" id="availableBooks">
                                       <div id="availableBooksList" class="row"></div>
                                </div>
                               <div class="tab-pane fade" id="deletedBooks">
                                    <div id="deletedBooksList" class="row"></div>
                                </div>

                                <div class="tab-pane fade" id="borrowedBooks">
                                    <div id="borrowedBooksList" class="row"></div>
                                </div>

                                <div class="tab-pane fade" id="departments">
                                     <div id="departments" class="row"></div>
                                </div>

                                <div class="tab-pane fade" id="newBooks">
                                    <ul id="newBooksList" class="row"></ul>
                                         </div>

                              <div class="tab-pane fade" id="updatedBooks">
                                <ul id="updatedBooksList" class="list-group"></ul>
                              </div>

                            </div>
                        </div>


                        <!-- Add Section -->
                        <div class="tab-pane fade" id="addBooks">
                            <h4 class="text-center">Add a New Book</h4>
    <form id="addBookForm" method="POST" action="/librarian/books/add" enctype="multipart/form-data">
        <div class="mb-3">
        <label class="form-label">Book Cover Image</label>
        <input type="file" class="form-control" name="book_image" accept="image/*" required>
    </div>
            <div class="mb-3">
                <label class="form-label">Title</label>
                <input type="text" class="form-control" name="title" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Author</label>
                <input type="text" class="form-control" name="author" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Department</label>
                <input type="text" class="form-control" name="department" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Date</label>
                <input type="date" class="form-control" name="date_added" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Book Code</label>
                <div class="input-group">
                    <input type="text" class="form-control" name="book_code" id="bookCode" readonly required>
                    <button type="button" class="btn btn-primary" onclick="generateCode()">Generate Code</button>
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Shelf Number</label>
                <input type="number" class="form-control" name="shelf_no" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Drawer Number</label>
                <input type="number" class="form-control" name="draw_no" required>
            </div>
            <div class="mb-3">
                <label class="form-label">Year</label>
                <input type="number" class="form-control" name="year" required>
            </div>
            <input type="hidden" name="to_json" value="true">
            <button type="submit" class="btn btn-success">Submit</button>
        </form>

                        </div>

                    
<!-- Remove Book Section -->
<div class="tab-pane fade" id="removeBooks">
    <h4 class="text-center">Remove a Book</h4>
 <!-- Search Form -->
    <form onsubmit="return false;">
        <div class="mb-3">
            <label class="form-label">Enter Book Code or Title</label>
            <div class="input-group">
                <input type="text" class="form-control" id="searchBook">
                 <a href="#" class="btn btn-secondary" onclick="searchBook(); return false;">Search</a>
            </div>
        </div>
    </form>

    <!-- Results Table -->
    <div id="searchResults" class="d-none">
        <h5>Search Results</h5>
       <table class="table table-bordered">
    <thead>
        <tr>
            <th>Book Code</th>
            <th>Title</th>
            <th>Author</th>
            <th>Action</th> 
        </tr>
    </thead>
    <tbody id="resultsTableBody"></tbody>
</table>

    </div>

    <script>
        function searchBook() {
            const searchInput = document.getElementById("searchBook").value.trim();
            if (!searchInput) {
                alert("Please enter a book code or title.");
                return;
            }
            fetch(`http://localhost:3000/librarian/search/book?q=${encodeURIComponent(searchInput)}`)
                .then(response => response.json())
                .then(data => {
                    const resultsTable = document.getElementById("searchResults");
                    const tbody = document.getElementById("resultsTableBody");
                    tbody.innerHTML = "";

                    if (data.success && data.books.length > 0) {
                        data.books.forEach(book => {
                            const row = document.createElement("tr");
                            row.innerHTML = `
                                <td>${book.book_code}</td>
                                <td>${book.title}</td>
                                <td>${book.author}</td>
                              <td>
  <!-- Soft Delete Button -->
  <button class="btn btn-warning btn-sm" onclick="softDeleteBook(${book.id})">
    <i class="fas fa-ban"></i>
  </button>

  <!-- Hard Delete Button -->
  <button class="btn btn-danger btn-sm" onclick="hardDeleteBook(${book.id})">
    <i class="fas fa-trash-alt"></i>
  </button>
</td>

                            `;
                            tbody.appendChild(row);
                        });
                        resultsTable.classList.remove("d-none");
                    } else {
                        alert("No books found.");
                        resultsTable.classList.add("d-none");
                    }
                })
                .catch(error => {
                    console.error("Error:", error);
                    alert("Something went wrong while searching.");
                });
        }
function softDeleteBook(bookId) {
  if (!confirm("Are you sure you want to hide this book?")) return;

  fetch(`/librarian/delete/book/${bookId}`, {
    method: 'DELETE'
  })
    .then(res => res.json())
    .then(data => {
      alert(data.message || "Book  hided.");
      searchBook(); // refresh list
    })
    .catch(err => {
      console.error("Error:", err);
      alert("Failed to hide book.");
    });
}
function hardDeleteBook(bookId) {
  if (!confirm("Are you sure you want to permanently delete this book?")) return;

  fetch(`/librarian/remove/book/${bookId}`, {
    method: 'DELETE'
  })
    .then(res => res.json())
    .then(data => {
      alert(data.message || "Book permanently deleted.");
      searchBook(); // refresh list
    })
    .catch(err => {
      console.error("Error:", err);
      alert("Failed to permanently delete book.");
    }); 
}


    </script>
                    </div>
                </div>

            </main>
        </div>
    </div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  fetch('/librarian/books/available')
    .then(response => response.json())
    .then(books => {
      const bookList = document.getElementById('availableBooksList');
      bookList.innerHTML = '';

      if (books.length === 0) {
        bookList.innerHTML = '<p>No available books found.</p>';
        return;
      }

      books.forEach(book => {
        const bookCard = document.createElement('div');
        bookCard.className = 'col-md-4 mb-3';
        bookCard.innerHTML = `
          <div class="card h-100 shadow-sm">
            <img src="/uploads/books/${book.image}" class="card-img-top" alt="${book.title}" style="height: 200px; object-fit: cover;">
            <div class="card-body">
              <h5 class="card-title">${book.title}</h5>
              <h6 class="card-subtitle mb-2 text-muted">${book.author}</h6>
              <p class="card-text"><strong>Department:</strong> ${book.department}</p>
              <p class="card-text"><strong>Drawer No:</strong> ${book.draw_no}</p>
              <p class="card-text"><strong>Shelf No:</strong> ${book.shelf_no}</p>
            </div>
          </div>
        `;
        bookList.appendChild(bookCard);
      });
    })
    .catch(err => {
      console.error('Error fetching books:', err);
      document.getElementById('availableBooksList').innerHTML = '<p>Error loading books.</p>';
    });
});
</script>


<script>
  async function generateCode() {
    try {
      const res = await fetch('/librarian/generate-book-code');
      const data = await res.json();
      document.getElementById("bookCode").value = data.bookCode;
    } catch (err) {
      console.error('Failed to generate book code:', err);
      alert('Could not generate book code. Please try again.');
    }
  }
</script>


<script>
document.addEventListener('DOMContentLoaded', function () {
  // Function to load deleted books
  function loadDeletedBooks() {
    console.log('Loading deleted books...');
    fetch('/librarian/deleted-books', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (!response.ok) throw new Error('Failed to fetch deleted books');
      return response.json();
    })
    .then(data => {
      const list = document.getElementById('deletedBooksList');
      list.innerHTML = ''; // Clear previous content

      if (data.length === 0) {
        list.innerHTML = '<p class="text-center w-100">No deleted books found.</p>';
        return;
      }

      data.forEach(book => {
        const card = document.createElement('div');
        card.className = 'col-md-4 mb-3';
        card.innerHTML = `
          <div class="card h-100 shadow-sm">
              <img src="/uploads/books/${book.image}" class="card-img-top" alt="${book.title}" style="height: 200px; object-fit: cover;">
            <div class="card-body">
             <h5 class="card-title">${book.title}</h5>
              <h6 class="card-subtitle mb-2 text-muted">${book.author}</h6>
              <p class="card-text"><strong>Department:</strong> ${book.department}</p>
              <p class="card-text"><strong>Drawer No:</strong> ${book.draw_no}</p>
              <p class="card-text"><strong>Shelf No:</strong> ${book.shelf_no}</p>
              <p class="card-text"><strong>Draw No:</strong> ${book.draw_no || 'N/A'}</p>
              <p class="card-text"><strong>Book Code:</strong> ${book.book_code || 'N/A'}</p>
              <p class="card-text"><strong>Deleted At:</strong> ${book.deleted_at}</p>
            </div>
          </div>
        `;
        list.appendChild(card);
      });
    })
    .catch(error => {
      console.error(error);
      document.getElementById('deletedBooksList').innerHTML = '<p class="text-danger text-center">Error loading deleted books.</p>';
    });
  }
loadDeletedBooks()
  // Optional: Load only when the tab is shown
});


</script>

<script>
document.addEventListener("DOMContentLoaded", () => {
  fetch('/librarian/borrowed/books')
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById("borrowedBooksList");

      if (data.success && data.data.length > 0) {
        container.innerHTML = data.data.map(book => `
          <div class="col-md-4">
            <div class="card mb-3 shadow">
             <img src="/uploads/books/${book.image}" class="card-img-top" alt="${book.title}" style="height: 200px; object-fit: cover;">
              <div class="card-body">
                <h5 class="card-title">${book.title}</h5>
                <p class="card-text">
                  <strong>Author:</strong> ${book.author}<br>
                  <strong>Borrowed by:</strong> ${book.borrowed_by}<br>
                 <strong>Borrowed at:</strong> ${book.borrowed_at ? new Date(book.borrowed_at).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : 'N/A'}<br>
                 <strong>Return at:</strong> ${book.return_at ? new Date(book.return_at).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : 'N/A'}

                </p>
              </div>
            </div>
          </div>
        `).join('');
      } else {
        container.innerHTML = `<p class="text-muted">No borrowed books found.</p>`;
      }
    })
    .catch(err => {
      console.error('Fetch error:', err);
      document.getElementById("borrowedBooksList").innerHTML =
        `<p class="text-danger">Failed to load borrowed books.</p>`;
    });
});
</script>

<script>
document.addEventListener("DOMContentLoaded", () => {
  fetch('/librarian/departments/catalogs')
    .then(res => res.json())
    .then(data => {
      const container = document.querySelector('#departments');

      if (data.success && data.data.length > 0) {
        const grouped = {};

        // Organize by department and then by type
        data.data.forEach(item => {
          const dept = item.department;
          const type = item.type;

          if (!grouped[dept]) grouped[dept] = {};
          if (!grouped[dept][type]) grouped[dept][type] = [];

          grouped[dept][type].push(item);
        });

        // Render HTML
        container.innerHTML = Object.entries(grouped).map(([dept, types]) => `
          <div class="col-12">
            <h3 class="mt-4 text-primary">${dept}</h3>
            ${Object.entries(types).map(([type, items]) => `
              <h5 class="text-secondary mt-3 text-capitalize">${type}s</h5>
              <div class="row">
                ${items.map(item => `
                  <div class="col-md-4">
                    <div class="card mb-3 shadow-sm">
                      <img src="/uploads/${item.image || 'default.jpg'}" class="card-img-top" alt="${item.title}">
                      <div class="card-body">
                        <h5 class="card-title">${item.title}</h5>
                        <p class="card-text">
                          <strong>Author:</strong> ${item.author}<br>
                          <strong>Year:</strong> ${item.year}<br>
                          <strong>Status:</strong> ${item.status}
                        </p>
                      </div>
                    </div>
                  </div>
                `).join('')}
              </div>
            `).join('')}
          </div>
        `).join('');
      } else {
        container.innerHTML = `<p class="text-muted">No catalog entries found.</p>`;
      }
    })
    .catch(err => {
      console.error('Error loading catalogs:', err);
      document.querySelector('#departments').innerHTML =
        `<p class="text-danger">Failed to load catalogs.</p>`;
    });
});
</script>



<script>
async function fetchNewBooks() {
  try {
    const res = await fetch('/librarian/resources/new-books');
    if (!res.ok) throw new Error("Failed to fetch new books");
    const data = await res.json();

    const list = document.getElementById('newBooksList');
    list.innerHTML = '';

    if (!data.length) {
      list.innerHTML = `<p class="text-muted w-100 text-center">No new books found.</p>`;
      return;
    }

    data.forEach(book => {
      const li = document.createElement('li');
      li.className = "col-md-4 mb-3"; // use grid column
      li.innerHTML = `
        <div class="card h-100 shadow-sm">
          <img src="/uploads/books/${book.image || 'default.jpg'}" class="card-img-top" alt="${book.title}" style="height:200px; object-fit:cover;">
          <div class="card-body">
            <h5 class="card-title">${book.title}</h5>
            <p class="card-text">
              <strong>Author:</strong> ${book.author || 'Unknown'}<br>
              <strong>Date Added:</strong> ${new Date(book.date_added).toLocaleDateString()}
            </p>
          </div>
        </div>
      `;
      list.appendChild(li);
    });
  } catch (err) {
    console.error(err);
    document.getElementById('newBooksList').innerHTML =
      `<p class="text-danger w-100 text-center">Error loading new books.</p>`;
  }
}

// Auto-fetch whenever "New Books" tab is shown
const newBooksTab = document.querySelector('a[href="#newBooks"]');
if (newBooksTab) {
  newBooksTab.addEventListener('shown.bs.tab', fetchNewBooks);
}

// Also fetch immediately if the tab is active on page load
document.addEventListener('DOMContentLoaded', () => {
  const activeTab = document.querySelector('.tab-pane.active');
  if (activeTab && activeTab.id === 'newBooks') {
    fetchNewBooks();
  }
});
</script>



<script>
document.addEventListener("DOMContentLoaded", () => {
  fetch('/updated-books')
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById("updatedBooksList");

      if (data.length > 0) {
        container.innerHTML = data.map(book => `
          <div class="col-md-4">
            <div class="card mb-3 shadow">
              ${book.image ? `<img src="/uploads/books/${book.image}" class="card-img-top" alt="${book.title}" style="height: 200px; object-fit: cover;">` : ''}
              <div class="card-body">
                <h5 class="card-title">${book.title}</h5>
                <p class="card-text">
                  <strong>Author:</strong> ${book.author || 'Unknown'}<br>
                  <strong>Last Updated:</strong> ${book.last_updated ? new Date(book.last_updated).toLocaleDateString('en-US', { month:'short', day:'numeric', year:'numeric' }) : 'N/A'}
                </p>
              </div>
            </div>
          </div>
        `).join('');
      } else {
        container.innerHTML = `<p class="text-muted">No recently updated books found.</p>`;
      }
    })
    .catch(err => {
      console.error('Fetch error:', err);
      document.getElementById("updatedBooksList").innerHTML =
        `<p class="text-danger">Failed to load updated books.</p>`;
    });
});
</script>






    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    
</body>
</html>