<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Generate Reports</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
      padding: 20px;
    }
    .card {
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
    .filter-section {
      background-color: #fff;
      padding: 20px;
      margin-bottom: 20px;
    }
    .table thead {
      background-color: #0d6efd;
      color: white;
    }
    .btn-approve {
      background-color: #198754;
      color: white;
    }
    .btn-reject {
      background-color: #dc3545;
      color: white;
    }
  </style>
</head>
<body>

<div class="container">
  <h2 class="mb-4">Generate Reports</h2>

  <!-- Filter Section -->
  <div class="card filter-section">
    <h5>Filter Reports</h5>
    <form id="filterForm" class="row g-3">
      <div class="col-md-3">
        <label for="librarian" class="form-label">Librarian</label>
        <select class="form-select" id="librarian">
          <option value="">All</option>
        </select>
      </div>
      <div class="col-md-3">
        <label for="reportType" class="form-label">Report Type</label>
        <select class="form-select" id="reportType" onchange="toggleResourceDropdown()">
          <option value="">All</option>
          <option value="resource">Resources</option>
          <option value="inventory">Inventory</option>
          <option value="attendance">Attendance</option>
        </select>
      </div>
      <div class="col-md-3" id="resourceTypeGroup" style="display: none;">
        <label for="resourceType" class="form-label">Resource Type</label>
        <select class="form-select" id="resourceType">
          <option value="book">Books</option>
          <option value="paper">Papers</option>
          <option value="project">Projects</option>
        </select>
      </div>
      <div class="col-md-3">
        <label for="dateFrom" class="form-label">Date From</label>
        <input type="date" class="form-control" id="dateFrom">
      </div>
      <div class="col-md-3">
        <label for="dateTo" class="form-label">Date To</label>
        <input type="date" class="form-control" id="dateTo">
      </div>
      <div class="col-12">
        <button type="submit" class="btn btn-primary">Apply Filters</button>
      </div>
    </form>
  </div>

  <!-- Reports Table -->
  <div class="card p-3">
    <h5 class="mb-3">All Reports</h5>
    <div class="table-responsive">
      <table class="table table-bordered align-middle">
        <thead>
          <tr>
            <th>Librarian</th>
            <th>Type</th>
            <th>Resource</th>
            <th>Date</th>
            <th>Summary</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="reportTable">
  <!-- Dynamically loaded rows -->
        </tbody>
      </table>
    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    loadReports(); // Auto-load reports when page loads
  });

  document.getElementById("filterForm").addEventListener("submit", function (e) {
    e.preventDefault();
    loadReports(); // Load reports with filters
  });

  function loadReports() {
    const librarian = document.getElementById("librarian").value;
    const type = document.getElementById("reportType").value;
    const resource = document.getElementById("resourceType").value;
    const dateFrom = document.getElementById("dateFrom").value;
    const dateTo = document.getElementById("dateTo").value;

    const params = new URLSearchParams({
      librarian,
      type,
      resource,
      dateFrom,
      dateTo
    });

    fetch(`http://localhost:3000/admin/get-reports?${params}`)
      .then(res => res.json())
      .then(data => {
        const table = document.getElementById("reportTable");
        table.innerHTML = '';

        if (data.length === 0) {
          table.innerHTML = `<tr><td colspan="7" class="text-center">No reports found</td></tr>`;
          return;
        }

        data.forEach(report => {
          const row = document.createElement("tr");

          row.innerHTML = `
            <td>${report.librarian_name}</td>
            <td>${report.report_type}</td>
            <td>${report.resource_type || '-'}</td>
            <td>${new Date(report.report_date).toLocaleDateString()}</td>
            <td>${report.summary}</td>
            <td><span class="badge ${getStatusBadge(report.status)}">${capitalize(report.status)}</span></td>
            <td>
              ${report.status === 'pending' ? `
                <button class="btn btn-sm btn-approve" onclick="updateStatus(${report.id}, 'approved', this)">Approve</button>
                <button class="btn btn-sm btn-reject" onclick="updateStatus(${report.id}, 'rejected', this)">Reject</button>
              ` : `<button class="btn btn-sm btn-secondary" disabled>${capitalize(report.status)}</button>`}
            </td>
          `;
          table.appendChild(row);
        });
      })
      .catch(err => {
        console.error('Error loading reports:', err);
      });
  }

  function updateStatus(reportId, status, btn) {
    fetch(`http://localhost:3000/admin/update-report-status`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: reportId, status })
    })
    .then(res => res.json())
    .then(response => {
      if (response.success) {
        loadReports(); // Reload table to reflect changes
      } else {
        alert('Update failed');
      }
    });
  }

  function getStatusBadge(status) {
    switch (status) {
      case 'approved': return 'bg-success';
      case 'rejected': return 'bg-danger';
      case 'pending':
      default: return 'bg-warning';
    }
  }

  function capitalize(word) {
    return word.charAt(0).toUpperCase() + word.slice(1);
  }

  function toggleResourceDropdown() {
    const type = document.getElementById("reportType").value;
    document.getElementById("resourceTypeGroup").style.display = type === "resource" ? "block" : "none";
  }
</script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    loadLibrarians();
    loadReports();
  });

  function loadLibrarians() {
    fetch('http://localhost:3000/admin/librarians')
      .then(res => res.json())
      .then(librarians => {
        const librarianSelect = document.getElementById('librarian');
        librarians.forEach(lib => {
          const option = document.createElement('option');
          option.value = lib.name;
          option.textContent = lib.name;
          librarianSelect.appendChild(option);
        });
      })
      .catch(err => console.error('Failed to load librarian list:', err));
  }

  // ... loadReports and other functions remain the same
</script>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
