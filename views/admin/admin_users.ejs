<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Manage Users</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background-color: #f5f5f5;
      padding: 20px;
    }
    .card-header {
      background-color: #0d6efd;
      color: #fff;
    }
    .user-photo {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      object-fit: cover;
    }
    .btn-sm {
      margin: 2px;
    }
  </style>
</head>
<body>
<div class="container">
  <h2 class="mb-4">Manage Users</h2>

  <!-- Add User Button -->
  <div class="mb-3">
    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addUserModal">Add New User</button>
  </div>

  <!-- Users Table -->
  <div class="card">
    <div class="card-header">All Users</div>
    <div class="card-body">
      <table class="table table-bordered table-hover">
        <thead class="table-light">
          <tr>
            <th>Photo</th>
            <th>Name</th>
            <th>Reg_no</th>
            <th>Department</th>
            <th>Program</th>
            <th>college</th>
            <th>year</th>
            <th>Role</th>
            <th>Gender</th>
            <th>Phone_no</th>
            <th>Actions</th>
          </tr>
        </thead>

<tbody id="userTableBody">
  <% users.forEach(user => { %>
    <tr>
      <td>
        <% if (user.photo) { %>
          <img src="/uploads/<%= user.photo %>" width="50" height="50" />
        <% } else { %>
          <span>No photo</span>
        <% } %>
      </td>
      <td><%= user.name %></td>
      <td><%= user.reg_no %></td>
      <td><%= user.department %></td>
      <td><%= user.program %></td>
      <td><%= user.college %></td>
      <td><%= user.year %></td>
      <td><%= user.role %></td>
      <td><%= user.gender %></td>
      <td><%= user.phone_no %></td>
      <td>
        <button class="btn btn-sm btn-info" onclick="viewUser('<%= user.id %>')">View</button>
        <button class="btn btn-sm btn-warning" onclick="openEditModal('<%= user.id %>')">Edit</button>
        <button class="btn btn-sm btn-danger" onclick="deleteUser('<%= user.id %>')">Delete</button>
      </td>
    </tr>
  <% }); %>
</tbody>


      </table>
    </div>
  </div>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
     <form id="addUserForm">
  <div class="modal-header">
    <h5 class="modal-title">Add New User</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
  </div>
  <div class="modal-body">
    <input type="text" class="form-control mb-2" placeholder="Name" id="addName" name="name" required />
    <input type="text" class="form-control mb-2" placeholder="Reg_no" id="addReg_no" name="reg_no" required />
    <input type="text" class="form-control mb-2" placeholder="Department" id="addDepartment" name="department" required />
    <input type="text" class="form-control mb-2" placeholder="Program" id="addProgram" name="program" required />
    <input type="text" class="form-control mb-2" placeholder="College" id="addCollege" name="college" required />
    <input type="text" class="form-control mb-2" placeholder="Year" id="addYear" name="year" required />
    <select class="form-control mb-2" id="addRole" name="role" required>
  <option value=""> Role</option>
  <option value="STUDENT">STUDENT</option>
  <option value="ADMIN">ADMIN</option>
  <option value="LIBRARIAN">LIBRARIAN</option>
  <option value="STAFF">STAFF</option>
  <option value="USER">USER</option>
</select>

    <input type="text" class="form-control mb-2" placeholder="Gender" id="addGender" name="gender" required />
    <input type="text" class="form-control mb-2" placeholder="Phone_no" id="addPhone_no" name="phone_no" required />
    <input type="file" class="form-control" id="addPhoto" name="photo" />
  </div>
  <div class="modal-footer">
    <button type="submit" class="btn btn-success">Add User</button>
  </div>
</form>

    </div>
  </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <form id="editUserForm">
        <div class="modal-header">
          <h5 class="modal-title">Edit User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" id="editIndex" />
          <input type="text" class="form-control mb-2" placeholder="Name" id="editName" required />
          <input type="text" class="form-control mb-2" placeholder="Reg_no" id="editReg_no" required />
          <input type="text" class="form-control mb-2" placeholder="Department" id="editDepartment" required />
          <input type="text" class="form-control mb-2" placeholder="Program" id="editProgram" required />
          <input type="text" class="form-control mb-2" placeholder="College" id="editCollege" required />
          <input type="text" class="form-control mb-2" placeholder="Year" id="editYear" required />
          <select class="form-control mb-2" id="editRole" required>
            <option value="">Role</option>
            <option value="STUDENT">STUDENT</option>
            <option value="ADMIN">ADMIN</option>
            <option value="LIBRARIAN">LIBRARIAN</option>
            <option value="STAFF">STAFF</option>
            <option value="USER">USER</option>
            </select>

          <input type="text" class="form-control mb-2" placeholder="Gender" id="editGender" required />
          <input type="text" class="form-control mb-2" placeholder="Phone_no" id="editPhone_no" required />
          <input type="file" class="form-control" id="editPhoto" />
        </div>
        <div class="modal-footer">
          <button type="submit" class="btn btn-success">Update User</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- View User Modal -->
<div class="modal fade" id="viewUserModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">User Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body text-center">
        <img id="viewPhoto" class="user-photo mb-3" />
        <h5 id="viewName"></h5>
        <p id="viewReg_no"></p>
        <p id="viewDepartment"></p>
        <p id="viewProgram"></p>
        <p id="viewCollege"></p>
        <p id="viewYear"></p>
        <p id="viewGender"></p>
        <p id="viewPhone_no"></p>
        <p><strong>Role:</strong> <span id="viewRole"></span></p>

      </div>
    </div>
  </div>
</div>

<script>
  
  const users = [];

document.getElementById('addUserForm').addEventListener('submit', function (e) {
  console.log("Edit form submitted"); 
  e.preventDefault();
  
  const form = e.target;
  const formData = new FormData(form);

  formData.append('toJson', 'true');

  fetch('/admin/add-user', {
    method: 'POST',
    body: formData
  })
  .then(res => res.json())
  .then(data => {
    if (data.error) {
      alert('Error: ' + data.error);
    } else {
      alert('User added successfully');
      form.reset();
      bootstrap.Modal.getInstance(document.getElementById("addUserModal")).hide();

      // After adding user, fetch all users fresh from the server
      fetch('/admin/view-users')
        .then(res => res.json())
        .then(usersData => {
          if (Array.isArray(usersData)) {
            users.length = 0;  // clear current users array
            usersData.forEach(user => {
              // Fix photo path for each user
              user.photo = user.photo ? user.photo.replace(/^\/?uploads\/?/, '') : '';
            });
            users.push(...usersData);
            renderUsers();
          } else {
            alert('Failed to load updated users list');
          }
        })
        .catch(err => {
          console.error('Error fetching users:', err);
          alert('Error fetching updated users');
        });
    }
  })
  .catch(err => {
    console.error(err);
    alert('An error occurred');
  });
});


window.addEventListener('DOMContentLoaded', () => {
  fetch('/admin/view-users')
    .then(res => res.json())
    .then(data => {

      console.log('Fetched users:', data);
      if (Array.isArray(data)) {
        users.length = 0; // clear array if needed
        data.forEach(user => {
          // Prepend /uploads/ if photo exists
    user.photo = user.photo ? user.photo : 'https://via.placeholder.com/60';
        });
        users.push(...data);
        renderUsers();
      } else {
        console.error('Unexpected response:', data);
        alert('Failed to load users');
      }
    })
    .catch(err => {
      console.error('Fetch error:', err);
      alert('Error fetching users');
    });
});


  function renderUsers() {
  const tbody = document.getElementById("userTableBody");
  tbody.innerHTML = "";

  users.forEach((user, index) => {
const photoUrl = user.photo
  ? `/uploads/books/${user.photo}`
  : 'https://via.placeholder.com/60';



    const row = document.createElement("tr");
    row.innerHTML = `
      <td><img src="${photoUrl}" class="user-photo" /></td>
      <td>${user.name}</td>
      <td>${user.reg_no}</td>
      <td>${user.department}</td>
      <td>${user.program}</td>
      <td>${user.college}</td>
      <td>${user.year}</td>
      <td>${user.role}</td>
      <td>${user.gender}</td>
      <td>${user.phone_no}</td>
      <td>
        <button class="btn btn-sm btn-warning" onclick="openEditModal(${index})">Edit</button>
        <button class="btn btn-sm btn-info text-white" onclick="viewUser(${index})">View</button>
        <button class="btn btn-sm btn-danger" onclick="deleteUser(${index})">Delete</button>
      </td>
    `;
    tbody.appendChild(row);
  });
}

function openEditModal(index) {
  const user = users[index];
  document.getElementById("editIndex").value = index;
  document.getElementById("editName").value = user.name;
  document.getElementById("editReg_no").value = user.reg_no;
  document.getElementById("editDepartment").value = user.department;
  document.getElementById("editProgram").value = user.program;
  document.getElementById("editCollege").value = user.college; 
  document.getElementById("editYear").value = user.year;
  document.getElementById("editRole").value = user.role;
  document.getElementById("editGender").value = user.gender;
  document.getElementById("editPhone_no").value = user.phone_no;
  document.getElementById("editPhoto").value = "";

  new bootstrap.Modal(document.getElementById("editUserModal")).show();
}

document.getElementById("editUserForm").addEventListener("submit", async function (e) {
  e.preventDefault();

  const form = e.target;
  const index = document.getElementById("editIndex").value;
  const user = users[index];
  if (!user) return alert("User not found.");

  const id = user.id;

  const formData = new FormData();
  formData.append("name", document.getElementById("editName").value);
  formData.append("reg_no", document.getElementById("editReg_no").value);
  formData.append("department", document.getElementById("editDepartment").value);
  formData.append("program", document.getElementById("editProgram").value);
  formData.append("college", document.getElementById("editCollege").value);
  formData.append("year", document.getElementById("editYear").value);
  formData.append("role", document.getElementById("editRole").value);
  formData.append("gender", document.getElementById("editGender").value);
  formData.append("phone_no", document.getElementById("editPhone_no").value);

  const photoInput = document.getElementById("editPhoto");
  if (photoInput.files.length > 0) {
    formData.append("photo", photoInput.files[0]);
  }

  try {
    const response = await fetch(`/admin/update-user/${id}`, {
      method: "PUT",
      body: formData
    });

    const data = await response.json();

    if (data.error) {
      alert('Error: ' + data.error);
    } else {
      alert('User updated successfully');
      form.reset();
      bootstrap.Modal.getInstance(document.getElementById("editUserModal")).hide();

      // Refresh user list from DB
      const res = await fetch('/admin/view-users');
      const usersData = await res.json();

      if (Array.isArray(usersData)) {
        users.length = 0;
        usersData.forEach(user => {
          user.photo = user.photo ? user.photo.replace(/^\/?uploads\/?/, '') : '';
        });
        users.push(...usersData);
        renderUsers();
      } else {
        alert('Failed to load updated users list');
      }
    }
  } catch (err) {
    console.error('Error during update:', err);
    alert('An error occurred while updating the user');
  }
});


 async function deleteUser(index) {
  const user = users[index];
  if (!user) return alert("User not found.");

  if (confirm("Are you sure you want to delete this user?")) {
    try {
      const response = await fetch(`/admin/delete-user/${user.id}`, {
        method: 'DELETE'
      });

      const data = await response.json();

      if (response.ok) {
        alert(data.message || 'User deleted successfully');
        users.splice(index, 1);  // Remove from frontend array
        renderUsers();           // Refresh UI
      } else {
        alert(data.error || 'Failed to delete user');
      }
    } catch (err) {
      console.error('Delete error:', err);
      alert('An error occurred while deleting the user.');
    }
  }
}


  function viewUser(index) {
    const user = users[index];
   const photoUrl = user.photo
  ? `/uploads/books/${user.photo}`
  : 'https://via.placeholder.com/60';

document.getElementById("viewPhoto").src = photoUrl;

    document.getElementById("viewName").textContent = user.name;
    document.getElementById("viewReg_no").textContent = `Reg No: ${user.reg_no}`;
    document.getElementById("viewDepartment").textContent = `Department: ${user.department}`;
    document.getElementById("viewProgram").textContent = `Program: ${user.program}`;
    document.getElementById("viewCollege").textContent = `College: ${user.collage}`;
    document.getElementById("viewYear").textContent = `Year: ${user.year}`;
    document.getElementById("viewGender").textContent = `Gender: ${user.gender}`;
    document.getElementById("viewPhone_no").textContent = `Phone: ${user.phone_no}`;
    document.getElementById("viewRole").textContent = user.role;
    new bootstrap.Modal(document.getElementById("viewUserModal")).show();
  }

  renderUsers();
</script>





<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
