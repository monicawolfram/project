<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Admin: Librarian Messages & Reports</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <style>
    body {
      background: #f8f9fa;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      padding: 20px;
    }
    .message-card {
      background: white;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      margin-bottom: 20px;
      padding: 20px;
    }
    .message-header {
      font-weight: 600;
      font-size: 1.2rem;
    }
    .message-meta {
      font-size: 0.9rem;
      color: #666;
      margin-bottom: 10px;
    }
    .message-content {
      white-space: pre-wrap;
      margin-bottom: 10px;
      font-size: 1rem;
    }
    .report-files ul {
      padding-left: 20px;
    }
    .reply {
      background: #e7f3ff;
      border-left: 3px solid #0d6efd;
      padding: 8px 12px;
      margin-top: 10px;
      border-radius: 6px;
    }
    .reply-meta {
      font-size: 0.85rem;
      font-weight: 600;
      color: #333;
    }
    textarea.reply-input {
      width: 100%;
      resize: vertical;
      min-height: 60px;
      margin-top: 8px;
      border-radius: 6px;
      border: 1px solid #ccc;
      padding: 8px;
    }
    .btn-reply {
      margin-top: 8px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="mb-4">ðŸ“© Admin Panel: Librarian Messages & Reports</h2>
    <div id="messagesContainer">Loading messages...</div>
  </div>

  <script>
    const container = document.getElementById('messagesContainer');

    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    async function fetchMessages() {
      try {
        const res = await fetch('/admin/librarian-messages'); // <-- replace with your real endpoint
        const messages = await res.json();
        renderMessages(messages);
      } catch (error) {
        container.innerHTML = `<div class="alert alert-danger">Failed to load messages.</div>`;
        console.error(error);
      }
    }

    function renderMessages(messages) {
      container.innerHTML = '';
      if (messages.length === 0) {
        container.innerHTML = `<div class="text-muted">No messages yet.</div>`;
        return;
      }

      messages.forEach(msg => {
        const card = document.createElement('div');
        card.className = 'message-card';

        const filesHTML = msg.files?.length
          ? `<div class="report-files"><strong>ðŸ“Ž Attachments:</strong><ul>${msg.files.map(f => `<li><a href="${f.url}" target="_blank">${f.name}</a></li>`).join('')}</ul></div>`
          : '';

        const repliesHTML = msg.replies?.length
          ? msg.replies.map(r => `
              <div class="reply">
                <div class="reply-meta">${r.adminName} <small>${r.time}</small></div>
                <div>${escapeHtml(r.text)}</div>
              </div>`).join('')
          : '<div class="text-muted">No replies yet.</div>';

        card.innerHTML = `
          <div class="message-header">${msg.librarianName} <span class="text-muted">[${msg.messageType}]</span></div>
          <div class="message-meta">${msg.timestamp}</div>
          <div class="message-content">${escapeHtml(msg.content)}</div>
          ${filesHTML}
          <div class="reply-section mt-3">
            <strong>Replies:</strong>
            <div class="replies-container">${repliesHTML}</div>
            <textarea class="reply-input" placeholder="Write your reply..."></textarea>
            <button class="btn btn-sm btn-primary btn-reply">Reply</button>
          </div>
        `;

        const replyBtn = card.querySelector('.btn-reply');
        replyBtn.addEventListener('click', async () => {
          const textarea = card.querySelector('.reply-input');
          const replyText = textarea.value.trim();
          if (!replyText) return alert('Please enter a reply.');

          // Post reply (you must build this endpoint)
          const response = await fetch(`/admin/reply-message/${msg.id}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: replyText })
          });

          if (response.ok) {
            textarea.value = '';
            fetchMessages(); // Refresh after sending
          } else {
            alert('Failed to send reply.');
          }
        });

        container.appendChild(card);
      });
    }

    fetchMessages();
    setInterval(fetchMessages, 5000); // Auto-refresh every 5 seconds
  </script>
</body>
</html>
