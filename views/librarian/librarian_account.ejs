<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Librarian Account System</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" 
    rel="stylesheet">
  <link 
    rel="stylesheet" 
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <style>
    body {
      background-color: #f8f9fa;
      padding: 20px;
    }
    .card-header {
      background-color: #198754;
      color: white;
    }
    .btn-action {
      margin: 2px;
    }
    .attachment-link {
      cursor: pointer;
      color: #0d6efd;
      text-decoration: none;
    }
    .attachment-controls {
      font-size: 0.9rem;
    }
  </style>
</head>
<body>

<div class="container">
  <h2 class="mb-4">Librarian Account Dashboard</h2>

  <!-- Librarian Table -->
  <div class="card">
    <div class="card-header">
      <strong>All Librarians</strong>
    </div>
    <div class="card-body">
      <table class="table table-bordered table-hover">
        <thead class="table-light">
        <tr>
          <th>Name</th>
          <th>Email</th>
          <th>Role</th>
          <th>Task (Today)</th>
          <th>Check-In</th>
          <th>Check-Out</th>
          <th>Attachments</th>
        </tr>
        </thead>
        <tbody id="librarianTable"></tbody>
      </table>
    </div>
  </div>

 
<!-- Comment Modal -->
<div class="modal fade" id="commentModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5>Add / View Comment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <textarea id="commentText" class="form-control" rows="4"></textarea>
      </div>
      <div class="modal-footer">
        <button class="btn btn-success" onclick="saveComment()">Save</button>
      </div>
    </div>
  </div>
</div>

<!-- Attachment Modal -->
<div class="modal fade" id="attachmentModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5>Add Attachment</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <input type="file" id="attachmentInput" class="form-control">
      </div>
      <div class="modal-footer">
        <button class="btn btn-primary" onclick="uploadAttachment()">Upload</button>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript -->
<script>
 
  
fetch('http://localhost:3000/librarian/librarians')
  .then(res => res.json())
  .then(data => {
    librarians = data;
    renderTable();
  });
let librarians = []; // global to hold data
let currentIndex = -1;

function renderTable() {
  const tbody = document.getElementById('librarianTable');
  tbody.innerHTML = ''; // clear previous rows

  librarians.forEach((librarian, index) => {
    // Prepare attachments HTML
    const attachmentsHtml = librarian.attachments && librarian.attachments.length > 0
      ? librarian.attachments.map((att, i) => `
          <div class="d-flex justify-content-between attachment-controls" style="max-width: 200px;">
            <a href="#" class="attachment-link">${att.filename}</a>
            <div>
              <button class="btn btn-sm btn-link text-danger" onclick="removeAttachment(${index}, ${i})" title="Remove attachment">
                <i class="fa fa-trash"></i>
              </button>
              <button class="btn btn-sm btn-link text-primary" onclick="updateAttachment(${index}, ${i})" title="Rename attachment">
                <i class="fa fa-edit"></i>
              </button>
            </div>
          </div>
        `).join('')
      : '<em>No attachments</em>';

    const row = document.createElement('tr');

    row.innerHTML = `
      <td>${librarian.name || ''}</td>
      <td>${librarian.email || ''}</td>
      <td>${librarian.role || ''}</td>
      <td>
        ${librarian.task || ''}
        <button class="btn btn-sm btn-outline-secondary btn-action" onclick="editTask(${index})" title="Edit task">
          <i class="fa fa-edit"></i>
        </button>
      </td>
      <td>${librarian.checkin || ''}</td>
      <td>${librarian.checkout || ''}</td>
      <td>
        ${attachmentsHtml}
        <button class="btn btn-sm btn-primary btn-action" onclick="openAttachmentModal(${index})">
          <i class="fa fa-plus"></i> Add
        </button>
      </td>
    `;

    tbody.appendChild(row);
  });
}

 

  function openAttachmentModal(index) {
    currentIndex = index;
    document.getElementById("attachmentInput").value = "";
    new bootstrap.Modal(document.getElementById("attachmentModal")).show();
  }

  function uploadAttachment() {
    const input = document.getElementById("attachmentInput");
    const fileName = input.files[0]?.name;
    if (fileName && currentIndex >= 0) {
      librarians[currentIndex].attachments.push(fileName);
      renderTable();
      bootstrap.Modal.getInstance(document.getElementById("attachmentModal")).hide();
    }
  }

  function removeAttachment(userIndex, fileIndex) {
    if (confirm("Remove this attachment?")) {
      librarians[userIndex].attachments.splice(fileIndex, 1);
      renderTable();
    }
  }

  function updateAttachment(userIndex, fileIndex) {
    const newName = prompt("Enter new attachment name:");
    if (newName) {
      librarians[userIndex].attachments[fileIndex] = newName;
      renderTable();
    }
  }

  function openCommentModal(index) {
    currentIndex = index;
    document.getElementById("commentText").value = librarians[index].comment || "";
    new bootstrap.Modal(document.getElementById("commentModal")).show();
  }

  function saveComment() {
    if (currentIndex >= 0) {
      librarians[currentIndex].comment = document.getElementById("commentText").value;
      renderTable();
      bootstrap.Modal.getInstance(document.getElementById("commentModal")).hide();
    }
  }

  function approveTask(index) {
    librarians[index].status = "Approved";
    alert("Task Approved!");
    renderTable();
  }

  function rejectTask(index) {
    librarians[index].status = "Rejected";
    alert("Task Rejected.");
    renderTable();
  }

 function editTask(index) {
  const newTask = prompt("Update today's task:", librarians[index].task);
  if (newTask) {
    fetch(`http://localhost:3000/librarian/task/${librarians[index].id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ task: newTask })
    })
    .then(response => response.json())
    .then(result => {
      if (result.message) {
        alert("Task updated successfully.");
        // Option 2: Fetch latest data and re-render
        fetch('http://localhost:3000/librarian/librarians')
          .then(res => res.json())
          .then(data => {
            librarians = data;
            renderTable();
          });
      } else {
        alert("Failed to update task.");
      }
    })
    .catch(err => {
      console.error("Error updating task:", err);
      alert("An error occurred while updating the task.");
    });
  }
}


  function deleteTask(index) {
    if (confirm("Delete this task completely?")) {
      librarians.splice(index, 1);
      renderTable();
    }
  }

  renderTable();
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
