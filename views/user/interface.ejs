<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Login</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"/>

  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-size: cover;
      color: rgb(28, 27, 27);
      min-height: 100vh;
      overflow: hidden;
      transition: background-color 0.5s ease;
    }

    .container-box {
      background: rgba(75, 59, 139, 0.7);
      padding: 50px;
      border-radius: 50px;
      text-align: center;
      max-width: 1000px;
      margin:  auto;
      box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
    }

    .scanner-input {
      opacity: 0;
      position: absolute;
      top: -100px;
    }

    .logo {
      width: 120px;
      margin-bottom: 15px;
    }

    .popup {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  max-width: 450px;
  padding: 30px;
  background: rgba(255, 255, 255, 0.95);
  color: #000;
  border-radius: 25px;
  text-align: center;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
  z-index: 1000;
  opacity: 0;
  transition: opacity 0.4s ease, transform 0.4s ease;
}

.popup.active {
  display: block;
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}


    .popup h4 {
      font-weight: bold;
      margin-bottom: 15px;
      color: #28a745;
    }

    .popup p {
      margin: 5px 0;
    }

 .popup-photo {
  width: 120px;
  height: 120px;
  object-fit: cover;
  border-radius: 50%;
  border: 4px solid #28a745;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}


    @keyframes popupSlideUp {
      0% {
        bottom: -100%;
        opacity: 0;
        transform: translateX(-50%) scale(0.5);
      }
      60% {
        bottom: 55%;
        opacity: 1;
        transform: translateX(-50%) scale(1.05);
      }
      100% {
        bottom: 50%;
        transform: translateX(-50%) scale(1);
      }
    }

    .fadeout-white {
      background-color: white !important;
      transition: background-color 0.8s ease;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <div class="container-box">
      <img src="/images/sjcet.png" alt="SJUCET Logo" class="logo" />
      <h2>WELCOME TO SJCET LIBRARY</h2>
      <i class="fa-solid fa-user fa-4x my-3"></i>
      <h4 class="mb-3">Scan Your ID to Login</h4>
      <input type="text" id="scanner" class="scanner-input" autofocus />
    <a href="/user/register" class="btn btn-outline-black btn-sm">Register Here</a>
    </div>
  </div>

 <div class="popup" id="userPopup">
  <h4 id="welcomeMsg"></h4>
  <img id="userPhoto" class="popup-photo mb-3" src="" alt="User Photo" />
  <p><strong>Name:</strong> <span id="name"></span></p>
  <p><strong>Reg No:</strong> <span id="regNo"></span></p>
  
  <p id="programRow"><strong>Program:</strong> <span id="program"></span></p>
  <p id="departmentRow"><strong>Dept:</strong> <span id="department"></span></p>
  <p id="yearRow"><strong>Year:</strong> <span id="year"></span></p>

  <p><strong>Gender:</strong> <span id="gender"></span></p>
  <p><strong>College:</strong> <span id="college"></span></p>
  <p><strong>Role:</strong> <span id="role"></span></p>
  <p><strong>Time In:</strong> <span id="timein"></span></p>
  <p><strong>Time Out:</strong> <span id="timeOut"></span></p>
</div>

  
<script>
  document.getElementById("scanner").addEventListener("keypress", function (event) {
    if (event.key === "Enter") {
      const reg_no = event.target.value.trim();
      if (!reg_no) return;

      const now = new Date();
      const month = now.getMonth() + 1;
      const year = now.getFullYear();

      fetch(`/user/fetch-user?reg=${reg_no}`)
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Save reg_no in sessionStorage and localStorage
            sessionStorage.setItem('userId', data.reg_no);
            localStorage.setItem('userId', data.reg_no);

            // Populate popup with user info
            document.getElementById("welcomeMsg").innerText = `WELCOME ${data.name} TO OUR LIBRARY`;
            document.getElementById("name").innerText = data.name;
            document.getElementById("regNo").innerText = data.reg_no;
            document.getElementById("gender").innerText = data.gender;
            document.getElementById("college").innerText = data.college;
            document.getElementById("role").innerText = data.role;
            document.getElementById("timein").innerText = "-";
            document.getElementById("timeOut").innerText = "-";

            // Set user photo
            const userPhoto = document.getElementById("userPhoto");
            userPhoto.src = data.image ? `/uploads/books/${data.image}` : "/images/default_user.png";

            // Show/hide student fields
            const isStudent = data.role.toUpperCase() === "STUDENT";
            document.getElementById("programRow").style.display = isStudent ? "block" : "none";
            document.getElementById("departmentRow").style.display = isStudent ? "block" : "none";
            document.getElementById("yearRow").style.display = isStudent ? "block" : "none";

            if (isStudent) {
              document.getElementById("program").innerText = data.program;
              document.getElementById("department").innerText = data.department;
              document.getElementById("year").innerText = data.year;
            }

            // Show popup
            document.getElementById("userPopup").classList.add("active");

            // Fetch today's attendance
            fetch(`/user/flat-attendance/${reg_no}?month=${month}&year=${year}`)
              .then(res => res.json())
              .then(attendanceData => {
                const today = now.toISOString().slice(0, 10);
                const todayAttendance = attendanceData.find(att => att.date === today);
                const weekday = now.toLocaleDateString('en-US', { weekday: 'long' });
                const timeNow = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

                fetch('/user/attendance', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({
                    reg_no: data.reg_no,
                    date: today,
                    day: weekday,
                    time_in: timeNow
                  })
                })
                .then(res => res.json())
                .then(response => {
                  if (response.type === "login") {
                    document.getElementById("timein").innerText = `${response.time_in} (${today}, ${weekday})`;
                    document.getElementById("timeOut").innerText = "Not yet logged out";
                  } else if (response.type === "logout") {
                    document.getElementById("timein").innerText = "Already Logged In";
                    document.getElementById("timeOut").innerText = `${response.time_out} (${today}, ${weekday})`;
                  } else if (todayAttendance) {
                    document.getElementById("timein").innerText = todayAttendance.time_in || "Not logged in";
                    document.getElementById("timeOut").innerText = todayAttendance.time_out || "Not yet logged out";
                  } else {
                    document.getElementById("timein").innerText = "Not logged in";
                    document.getElementById("timeOut").innerText = "Not yet logged out";
                  }

                  console.log(response.message);

                  // Redirect after short delay with fade effect
                  let redirectPath = "/user/home";
                  if (data.role.toUpperCase() === "ADMIN") {
                    redirectPath = "/admin/dashboard";
                  } else if (data.role.toUpperCase() === "LIBRARIAN") {
                    redirectPath = "/librarian/librarian_home";
                  }

                  setTimeout(() => {
                    document.body.classList.add("fadeout-white");
                    setTimeout(() => {
                      window.location.href = redirectPath;
                    }, 1000);
                  }, 2000); // Wait 2s before starting fade
                })
                .catch(err => {
                  console.error("Error logging attendance:", err);
                });
              })
              .catch(err => {
                console.error("Error fetching attendance:", err);
              });

            // Store session on server
            fetch('/user/set-session', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ reg_no: data.reg_no })
            })
            .then(res => res.json())
            .then(result => {
              if (!result.success) {
                console.warn("Session not set:", result.message);
              }
            })
            .catch(err => {
              console.error("Error setting session:", err);
            });

          } else {
            alert("User Not Found.");
          }
        })
        .catch(error => {
          console.error("Error fetching user data:", error);
          alert("Server error. Please try again.");
        });

      event.target.value = "";
      event.target.focus();
    }
  });
</script>





  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
</body>
</html>
