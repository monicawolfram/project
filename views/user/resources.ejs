<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>View Status - Resources</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <style>
    body {
      background-color: #f4f6f9;
      font-family: 'Poppins', sans-serif;
    }
    .navbar {
      background: rgba(0, 0, 0, 0.85);
      padding: 15px;
      border-radius: 10px;
    }
    .nav-link {
      color: white !important;
      font-weight: 500;
      transition: all 0.3s ease;
      padding-left: 10px;
      padding-right: 10px;
    }
    .nav-link:hover {
      color: #ffcc00 !important;
      transform: scale(1.1);
    }
    .container-box {
      background: rgba(108, 255, 97, 0.8);
      color: black;
      padding: 20px;
      border-radius: 20px;
      box-shadow: 4px 10px rgba(0, 0, 0, 0.3);
      margin-top: 80px;
    }
    .btn-borrow {
      background-color: #28a745;
      color: white;
      border-radius: 20px;
      border: none;
      padding: 8px 16px;
    }
    .btn-borrow:hover {
      background-color: #218838;
    }
    .btn {
      border-radius: 25px;
      padding: 10px 20px;
      font-size: 16px;
      transition: all 0.3s ease;
      margin: 5px;
    }
    .btn:hover {
      transform: scale(1.1);
      background: #27ae60;
    }
    .table {
      background: #fff;
      color: #333;
    }
    .toast {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 1050;
    }
  </style>
</head>
<body>
  <div class="container mt-4">
    <nav class="navbar d-flex justify-content-around flex-wrap">
      <a href="/user/home" class="nav-link"><i class="fas fa-home"></i> Home</a>
      <div class="dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          <i class="fas fa-book"></i> Resources
        </a>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="/user/books">Books</a></li>
          <li><a class="dropdown-item" href="/user/papers">Papers</a></li>
          <li><a class="dropdown-item" href="/user/projects">Projects</a></li>
        </ul>
      </div>
      <a href="/user/attendance" class="nav-link"><i class="fas fa-user-check"></i> Attendance</a>
      <div class="dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          <i class="fas fa-exchange-alt"></i> Transaction
        </a>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="/user/borrowing">Borrowing</a></li>
          <li><a class="dropdown-item" href="/user/paying">Paying Fine</a></li>
        </ul>
      </div>
      <div class="dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
          <i class="fas fa-eye"></i> Viewstatus
        </a>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="/user/resources">Resources</a></li>
          <li><a class="dropdown-item" href="/user/payment">Payment</a></li>
          <li><a class="dropdown-item" href="/user/profile">Profile</a></li>
        </ul>
      </div>
    </nav>

    <div class="container-box mt-4">
      <h2 class="text-center mb-4"><i class="fas fa-folder-open"></i> Resources Status</h2>

      <ul class="nav nav-tabs" id="resourceTabs" role="tablist">
        <li class="nav-item" role="presentation">
          <button class="nav-link active" id="available-tab" data-bs-toggle="tab" data-bs-target="#available" type="button" role="tab" aria-controls="available" aria-selected="true">Available</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="borrowed-tab" data-bs-toggle="tab" data-bs-target="#borrowed" type="button" role="tab" aria-controls="borrowed" aria-selected="false">Borrowed</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="returned-tab" data-bs-toggle="tab" data-bs-target="#returned" type="button" role="tab" aria-controls="returned" aria-selected="false">Returned</button>
        </li>
        <li class="nav-item" role="presentation">
          <button class="nav-link" id="new-tab" data-bs-toggle="tab" data-bs-target="#new" type="button" role="tab" aria-controls="new" aria-selected="false">New</button>
        </li>
      </ul>

      <div class="tab-content mt-3">
        <div class="tab-pane fade show active" id="available" role="tabpanel" aria-labelledby="available-tab">
          <table class="table table-bordered text-center">
            <thead class="table-success">
              <tr>
                <th>Resource</th>
                <th>Type</th>
              </tr>
            </thead>
            <tbody id="availableList">
              <tr><td colspan="2" class="text-center">Loading resources...</td></tr>
            </tbody>
          </table>
        </div>

        <div class="tab-pane fade" id="borrowed" role="tabpanel" aria-labelledby="borrowed-tab">
          <table class="table table-bordered text-center">
            <thead class="table-warning">
              <tr>
                <th>Borrower</th>
                <th>Resource</th>
                <th>Type</th>
                <th>Borrow Date</th>
                <th>Return Date</th>
              </tr>
            </thead>
            <tbody id="borrowedList">
              <tr><td colspan="5" class="text-center">Loading resources...</td></tr>
            </tbody>
          </table>
        </div>

        <div class="tab-pane fade" id="returned" role="tabpanel" aria-labelledby="returned-tab">
          <table class="table table-bordered text-center">
            <thead class="table-info">
              <tr>
                <th>Resource</th>
                <th>Type</th>
                <th>Return Date</th>
                <th>Borrow Again</th>
              </tr>
            </thead>
            <tbody id="returnedList">
              <tr><td colspan="4" class="text-center">Loading resources...</td></tr>
            </tbody>
          </table>
        </div>

        <div class="tab-pane fade" id="new" role="tabpanel" aria-labelledby="new-tab">
          <table class="table table-bordered text-center">
            <thead class="table-primary">
              <tr>
                <th>Resource</th>
                <th>Type</th>
                <th>Date Added</th>
              </tr>
            </thead>
            <tbody id="newList">
              <tr><td colspan="3" class="text-center">Loading resources...</td></tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Toast Notification -->
    <div id="resources-toast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="d-flex">
        <div class="toast-body">
          Resources loaded successfully!
        </div>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
    </div>
  </div>

  <!-- Footer Buttons -->
  <div class="footer-btns text-center mt-3 mb-4">
    <a href="/user/AboutUs" class="btn btn-success"><i class="fa-solid fa-info-circle"></i> About Us</a>
    <a href="/user/help" class="btn btn-success"><i class="fa-solid fa-question-circle"></i> Help</a>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    // User identifier (should come from session or login in real app)
    const regNo = "23IT013"; // Replace with dynamic value as needed

    // Get tbody elements to populate tables
    const availableList = document.getElementById('availableList');
    const borrowedList = document.getElementById('borrowedList');
    const returnedList = document.getElementById('returnedList');
    const newList = document.getElementById('newList');

    // Render resources to respective tables based on status
    function renderResources(resources) {
      availableList.innerHTML = '';
      borrowedList.innerHTML = '';
      returnedList.innerHTML = '';
      newList.innerHTML = '';

      let hasAvailable = false, hasBorrowed = false, hasReturned = false, hasNew = false;

      resources.forEach(item => {
        let row = document.createElement('tr');

        if (item.status === 'available') {
          row.innerHTML = `
            <td>${item.resource}</td>
            <td>${item.type}</td>
          `;
          availableList.appendChild(row);
          hasAvailable = true;
        }

        if (item.status === 'borrowed') {
          row.innerHTML = `
            <td>${item.borrower || ''}</td>
            <td>${item.resource}</td>
            <td>${item.type}</td>
            <td>${item.borrowDate || ''}</td>
            <td>${item.returnDate || ''}</td>
          `;
          borrowedList.appendChild(row);
          hasBorrowed = true;
        }

        if (item.status === 'returned') {
          row.innerHTML = `
            <td>${item.resource}</td>
            <td>${item.type}</td>
            <td>${item.returnDate || ''}</td>
            <td><button class="btn btn-borrow" onclick="borrowResource('${item.resource}')">Borrow</button></td>
          `;
          returnedList.appendChild(row);
          hasReturned = true;
        }

        if (item.status === 'new') {
          row.innerHTML = `
            <td>${item.resource}</td>
            <td>${item.type}</td>
            <td>${item.dateAdded || ''}</td>
          `;
          newList.appendChild(row);
          hasNew = true;
        }
      });

      if (!hasAvailable) {
        availableList.innerHTML = '<tr><td colspan="2" class="text-center">No available resources</td></tr>';
      }
      if (!hasBorrowed) {
        borrowedList.innerHTML = '<tr><td colspan="5" class="text-center">No borrowed resources</td></tr>';
      }
      if (!hasReturned) {
        returnedList.innerHTML = '<tr><td colspan="4" class="text-center">No returned resources</td></tr>';
      }
      if (!hasNew) {
        newList.innerHTML = '<tr><td colspan="3" class="text-center">No new resources</td></tr>';
      }
    }

    // Show success toast notification
    function showResourcesSuccessToast() {
      const toastEl = document.getElementById('resources-toast');
      toastEl.classList.remove('text-bg-danger');
      toastEl.classList.add('text-bg-success');
      toastEl.querySelector('.toast-body').textContent = 'Resources loaded successfully!';
      const toast = new bootstrap.Toast(toastEl);
      toast.show();
    }

    // Show error toast notification
    function showResourcesErrorToast(message) {
      const toastEl = document.getElementById('resources-toast');
      toastEl.classList.remove('text-bg-success');
      toastEl.classList.add('text-bg-danger');
      toastEl.querySelector('.toast-body').textContent = message;
      const toast = new bootstrap.Toast(toastEl);
      toast.show();
    }

    // Fetch resource data from backend API
    async function fetchResources() {
      try {
        const response = await fetch('/user/resources/all');
        if (response.ok) {
          const resources = await response.json();
          renderResources(resources);
          showResourcesSuccessToast();
        } else {
          console.error('Failed to fetch resources:', response.status);
          renderResources([]);
          showResourcesErrorToast('Failed to load resources');
        }
      } catch (error) {
        console.error('Error fetching resources:', error);
        renderResources([]);
        showResourcesErrorToast('Error loading resources');
      }
    }

    // Placeholder borrow action
    function borrowResource(resource) {
      alert(`Borrow request for "${resource}" sent!`);
      // TODO: Implement borrow API POST request here
    }

    // Load resources when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      fetchResources();
    });
  </script>
</body>
</html>
